{
	"textureSize": [64, 32],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -18, 0],
			"submodels": [
				{
					"id": "death_reverse_head",
					"invertAxis": "xy",
					"submodels": [
						{
							"id": "head1",
							"invertAxis": "xy",
							"boxes": [
								{"coordinates": [-4, 18, -4, 8, 8, 8], "textureOffset": [0, 0]}
							]
						}
					]
				}
			],
			"animations": [
				{
					"death_reverse_head.rz": "if(health <= 0, -torad((10-hurt_time*hurt_time/10)*9), 0)",
					"head1.rx": "if(health <= 0 && hurt_time > 0, sin(age/5), 0)",
					"head1.ry": "if(health <=0 && hurt_time > 0, sin(age/6), 0)",
					"head1.rz": "if(health <= 0, if(hurt_time > 0, sin(age/7), pi/2), 0)",
					"head1.tx": "if(health <= 0, 22*(sin(head1.rx)*sin(head1.ry)*cos(head1.rz)-cos(head1.rx)*sin(head1.rz)) + 3*(10-hurt_time), 0)", 
					"head1.ty": "if(health <= 0, -22+22*(sin(head1.rx)*sin(head1.ry)*sin(head1.rz)+cos(head1.rx)*cos(head1.rz)) + 18*(hurt_time*hurt_time-15*hurt_time+50)/50, 0)", 
					"head1.tz": "if(health <= 0, 22*sin(head1.rx)*cos(head1.ry) - 4*(10-hurt_time), 0)"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -18, 0],
			"boxes": [
				{"coordinates": [-4, 6, -2, 8, 12, 4], "textureOffset": [16, 16]}
			]
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [-2, -6, -4],
			"boxes": [
				{"coordinates": [0, 0, 2, 4, 6, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [2, -6, -4],
			"boxes": [
				{"coordinates": [-4, 0, 2, 4, 6, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [-2, -6, 4],
			"submodels": [
				{
					"id": "death_reverse_leg",
					"invertAxis": "xy",
					"submodels": [
						{
							"id": "leg3_1",
							"invertAxis": "xy",
							"boxes": [
								{"coordinates": [0, 0, -6, 4, 6, 4], "textureOffset": [0, 16]}
							]
						}
					]
				}
			],
			"animations": [
				{
					"death_reverse_leg.rz": "if(health <= 0, -torad((10-hurt_time*hurt_time/10)*9), 0)",
					"leg3_1.rx": "if(health <= 0 && hurt_time > 0, sin(age/3), 0)",
					"leg3_1.ry": "if(health <= 0 && hurt_time > 0, sin(age/6), 0)",
					"leg3_1.rz": "if(health <= 0, if(hurt_time > 0, sin(age/4), -pi/2), 0)",
					"leg3_1.tx": "if(health <= 0, -2+2*cos(leg3_1.ry)*cos(leg3_1.rz)+3*(sin(leg3_1.rx)*sin(leg3_1.ry)*cos(leg3_1.rz)-cos(leg3_1.rx)*sin(leg3_1.rz))+4*(cos(leg3_1.rx)*sin(leg3_1.ry)*cos(leg3_1.rz)+sin(leg3_1.rx)*sin(leg3_1.rz)) - (10-hurt_time), 0)", 
					"leg3_1.ty": "if(health <= 0, -3+2*cos(leg3_1.ry)*sin(leg3_1.rz)+3*(sin(leg3_1.rx)*sin(leg3_1.ry)*sin(leg3_1.rz)+cos(leg3_1.rx)*cos(leg3_1.rz))+4*(cos(leg3_1.rx)*sin(leg3_1.ry)*sin(leg3_1.rz)-sin(leg3_1.rx)*cos(leg3_1.rz)) + (pow(hurt_time-5,2)-25)/3, 0)", 
					"leg3_1.tz": "if(health <= 0, -4-2*sin(leg3_1.ry)+3*sin(leg3_1.rx)*cos(leg3_1.ry)+4*cos(leg3_1.rx)*cos(leg3_1.ry), 0)"
				}
			]
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [2, -6, 4],
			"boxes": [
				{"coordinates": [-4, 0, -6, 4, 6, 4], "textureOffset": [0, 16]}
			]
		}
	]
}